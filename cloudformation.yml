"AWSTemplateFormatVersion": "2010-09-09",
"Description": "The AWS CloudFormation template for this application",
"Resources": {
  "DeploymentBucketPolicy": {
    "Type": "AWS::S3::BucketPolicy",
    "Properties": {
      "Bucket": "test-deployment-bucket",
      "PolicyDocument": {
        "Statement": [
          {
            "Action": "s3:*",
            "Effect": "Deny",
            "Principal": "*",
            "Resource": [
              {
                "Fn::Join": [
                    "",
                  [
                      "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                      ":s3:::",
                    {
                      "test-deployment-bucket"
                    },
                      "/*"
                  ]
                ]
              },
              {
                "Fn::Join": [
                    "",
                  [
                      "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                      ":s3:::",
                    {
                      "test-deployment-bucket"
                    }
                  ]
                ]
              }
            ],
            "Condition": {
              "Bool": {
                "aws:SecureTransport": false
              }
            }
          }
        ]
      }
    }
  },
  "Lambda1LogGroup": {
    "Type": "AWS::Logs::LogGroup",
    "Properties": {
      "LogGroupName": "/aws/lambda/AWSSelfLearning-dev-Lambda1"
    }
  },
  "Lambda2LogGroup": {
    "Type": "AWS::Logs::LogGroup",
    "Properties": {
      "LogGroupName": "/aws/lambda/AWSSelfLearning-dev-Lambda2"
    }
  },
  "IamRoleLambdaExecution": {
    "Type": "AWS::IAM::Role",
    "Properties": {
      "AssumeRolePolicyDocument": {
        "Version": "2012-10-17",
        "Statement": [
          {
            "Effect": "Allow",
            "Principal": {
              "Service": [
                  "lambda.amazonaws.com"
              ]
            },
            "Action": [
                "sts:AssumeRole"
            ]
          }
        ]
      },
      "Policies": [
        {
          "PolicyName": {
            "Fn::Join": [
                "-",
              [
                  "AWSSelfLearning",
                  "dev",
                  "lambda"
              ]
            ]
          },
          "PolicyDocument": {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Effect": "Allow",
                "Action": [
                    "logs:CreateLogStream",
                    "logs:CreateLogGroup"
                ],
                "Resource": [
                  {
                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/AWSSelfLearning-dev*:*"
                  }
                ]
              },
              {
                "Effect": "Allow",
                "Action": [
                    "logs:PutLogEvents"
                ],
                "Resource": [
                  {
                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/AWSSelfLearning-dev*:*:*"
                  }
                ]
              },
              {
                "Effect": "Allow",
                "Action": [
                    "lambda:InvokeFunction",
                    "s3:PutObject",
                    "s3:GetObject",
                    "s3:DeleteObject",
                    "s3:ListBucket"
                ],
                "Resource": "*"
              }
            ]
          }
        }
      ],
      "Path": "/",
      "RoleName": {
        "Fn::Join": [
            "-",
          [
              "AWSSelfLearning",
              "dev",
            {
              "Ref": "AWS::Region"
            },
              "lambdaRole"
          ]
        ]
      }
    }
  },
  "Lambda1LambdaFunction": {
    "Type": "AWS::Lambda::Function",
    "Properties": {
      "Code": {
        "S3Bucket": "test-deployment-bucket",
        "S3Key": "test-deployment-bucket/AWSSelfLearning.jar"
      },
      "Handler": "lambda.Lambda1::handleRequest",
      "Runtime": "java8",
      "FunctionName": "AWSSelfLearning-dev-Lambda1",
      "MemorySize": 1024,
      "Timeout": 6,
      "Role": {
        "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
        ]
      }
    },
    "DependsOn": [
        "Lambda1LogGroup"
    ]
  },
  "Lambda2LambdaFunction": {
    "Type": "AWS::Lambda::Function",
    "Properties": {
      "Code": {
        "S3Bucket": "test-deployment-bucket",
        "S3Key": "test-deployment-bucket/AWSSelfLearning.jar"
      },
      "Handler": "lambda.Lambda2::handleRequest",
      "Runtime": "java8",
      "FunctionName": "AWSSelfLearning-dev-Lambda2",
      "MemorySize": 1024,
      "Timeout": 900,
      "Role": {
        "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
        ]
      },
      "ReservedConcurrentExecutions": 100
    },
    "DependsOn": [
        "Lambda2LogGroup"
    ]
  },
  "Lambda1SnsSubscriptionSuperTopic": {
    "Type": "AWS::SNS::Subscription",
    "Properties": {
      "TopicArn": {
        "Ref": "SuperTopic"
      },
      "Protocol": "lambda",
      "Endpoint": {
        "Fn::GetAtt": [
            "Lambda1LambdaFunction",
            "Arn"
        ]
      }
    }
  },
  "Lambda1LambdaPermissionSuperTopicSNS": {
    "Type": "AWS::Lambda::Permission",
    "Properties": {
      "FunctionName": {
        "Fn::GetAtt": [
            "Lambda1LambdaFunction",
            "Arn"
        ]
      },
      "Action": "lambda:InvokeFunction",
      "Principal": "sns.amazonaws.com",
      "SourceArn": {
        "Ref": "SuperTopic"
      }
    }
  },
  "SuperTopic": {
    "Type": "AWS::SNS::Topic",
    "Properties": {
      "TopicName": "MyCustomTopic",
      "Subscription": [
        {
          "Protocol": "email",
          "Endpoint": "jiajie.ma@thoughtworks.com"
        }
      ]
    }
  },
  "S3FromLambda1Cache": {
    "Type": "AWS::S3::Bucket",
    "Properties": {
      "BucketName": "lambda1s3",
      "CorsConfiguration": {
        "CorsRules": [
          {
            "AllowedMethods": [
                "GET",
                "PUT"
            ],
            "AllowedOrigins": [
                "*"
            ],
            "AllowedHeaders": [
                "*"
            ]
          }
        ]
      }
    }
  },
  "S3FromLambda2Cache": {
    "Type": "AWS::S3::Bucket",
    "Properties": {
      "BucketName": "lambda2s3",
      "CorsConfiguration": {
        "CorsRules": [
          {
            "AllowedMethods": [
                "GET",
                "PUT"
            ],
            "AllowedOrigins": [
                "*"
            ],
            "AllowedHeaders": [
                "*"
            ]
          }
        ]
      }
    }
  },
  "OpsEventRule": {
    "Type": "AWS::Events::Rule",
    "Properties": {
      "ScheduleExpression": "cron(0 9 ? * 2#1 *)",
      "Description": "EventRuleForSns",
      "State": "ENABLED",
      "Targets": [
        {
          "Arn": {
            "Ref": "SuperTopic"
          },
          "Id": "targetSnsV1"
        }
      ]
    }
  },
  "EventTopicPolicy": {
    "Type": "AWS::SNS::TopicPolicy",
    "Properties": {
      "PolicyDocument": {
        "Statement": [
          {
            "Effect": "Allow",
            "Principal": {
              "Service": "events.amazonaws.com"
            },
            "Action": "sns:Publish",
            "Resource": "*"
          }
        ]
      },
      "Topics": [
        {
          "Ref": "SuperTopic"
        }
      ]
    }
  }
},
"Outputs": {
  "DeploymentBucketName": {
    "Value": "test-deployment-bucket"
  }
}

